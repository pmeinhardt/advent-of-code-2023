#!/usr/bin/env python3

from collections import Counter
import sys

labels = list(reversed("AKQJT98765432"))
values = dict((k, v) for v, k in enumerate(labels))

def strength(hand):
    counts = sorted(Counter(hand).values())
    typ = None

    if counts == [5]: # five of a kind
        typ = 7
    elif counts == [1, 4]: # four of a kind
        typ = 6
    elif counts == [1, 1, 3]: # full house
        typ = 5
    elif counts == [2, 3]: # three of a kind
        typ = 4
    elif counts == [1, 2, 2]: # two pair
        typ = 3
    elif counts == [1, 1, 1, 2]: # one pair
        typ = 2
    elif counts == [1, 1, 1, 1, 1]: # high card
        typ = 1
    else:
        typ = 0

    vals = tuple(values[l] for l in hand)

    return (typ, vals)

if __name__ == "__main__":
    game = list((h, int(b)) for h, b in (line.split() for line in sys.stdin))
    strengths = dict((hand, strength(hand)) for hand, _ in game)
    ranked = sorted(game, key=lambda g: strengths[g[0]])
    print("\n".join(f"{h}: {strengths[h]}" for h, _ in ranked))
    total = sum(bid * (i + 1) for i, (_, bid) in enumerate(ranked))
    print(total)
